{"version":3,"sources":["Category.js","Header.js","Footer.js","Home.js","Dog.js","index.js","App.js","logo.png"],"names":["Category","props","abortController","AbortController","toTitleCase","str","toLowerCase","split","map","word","charAt","toUpperCase","slice","join","state","img","this","abort","fetch","name","signal","then","res","json","data","url","setState","catch","error","className","alt","src","width","height","to","React","Component","Header","logo","PureComponent","Footer","Navbar","color","role","aria-label","href","Home","loading","categories","axios","type","dogs","push","dog","message","filter","_","index","Dog","load","match","params","breed","newImg","forEach","imgs","concat","dataLength","pageStart","loadMore","hasMore","loader","images","render","exact","path","component","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.8d9086f9.chunk.js","sourcesContent":["import React from \"react\"\nimport { Link } from 'react-router-dom'\nimport \"./category.css\"\n\n\nexport default class Category extends React.Component {\n\n    abortController = new AbortController();\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            img: null,\n        };\n    }\n\n    toTitleCase = (str) => {\n        return str\n            .toLowerCase()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    };\n\n\n    componentWillUnmount() {\n        this.abortController.abort();\n    }\n\n    async componentDidMount() {\n        fetch(`https://dog.ceo/api/breed/${this.props.name}/images/random/1`, {signal: this.abortController.signal})\n            .then(res => res.json())\n            .then(\n                (data) => {\n                    let url = data['message'];\n\n                    this.setState({\n                        img: url\n                    });\n\n                })\n            .catch((error) => {\n                    this.setState({\n                        error: error\n                    });\n                }\n            )\n    }\n\n\n    render() {\n        let name = this.toTitleCase(this.props.name);\n\n\n        return(\n            <div className=\"card category\" >\n                <div className=\"card-body\">\n                    <img alt={this.props.name} src={this.state.img} width=\"320\" height=\"180\" />\n                    <h5 className=\"card-title\">{name}</h5>\n                    <Link className=\"btn btn-primary\" to={'/' + this.props.name}>Woof!</Link>\n                </div>\n            </div>\n        );\n\n    }\n}\n\n\n\n","import React, { PureComponent } from \"react\";\nimport \"./header.css\";\nimport logo from './logo.png';\n\nexport default class Header extends PureComponent {\n    render() {\n        return (\n            <header className=\"component-header\">\n\n                <nav className=\"navbar navbar-expand-lg\">\n                    <div className=\"text-center\">\n                    <img src={logo} className=\"App-logo \" alt=\"logo\" width=\"100\" height=\"100\" />\n                    <h1>Doggos.io</h1>\n                    </div>\n\n                </nav>\n\n            </header>\n    );\n    }\n}\n","import React from 'react'\nimport {Navbar} from 'reactstrap';\nimport './footer.css';\n\nexport default class Footer extends React.Component {\n    render() {\n        return (\n            <div className=\"fixed-bottom footer\">\n                <Navbar color=\"white\">\n                    <p>Made with <span role=\"img\" aria-label=\"heart\">❤️</span> by Ruben</p>\n                    <p>Images from <a href=\"https://dog.ceo/api/\">https://dog.ceo/api/</a> </p>\n                </Navbar>\n            </div>\n        )\n    }\n\n}\n","import React from 'react'\nimport axios from 'axios'\nimport Category from './Category.js'\nimport Header from './Header.js'\nimport Footer from './Footer'\n\n\n// import React, { useState, useEffect } from \"react\";\n//\n// export default function Page() {\n//     const value = usePromise(\"https://something.com/api/\");\n//     return (\n//         <p>{value ? value : \"fetching data...\"}</p>\n//     );\n// }\n//\n// function usePromise(url) {\n//     const [value, setState] = useState(null);\n//\n//     useEffect(() => {\n//         let isMounted = true; // track whether component is mounted\n//\n//         request.get(url)\n//             .then(result => {\n//                 if (isMounted) {\n//                     setState(result);\n//                 }\n//             });\n//\n//         return () => {\n//             // clean up\n//             isMounted = false;\n//         };\n//     }, []); // only on \"didMount\"\n//\n//     return value;\n// }\n\nexport default class Home extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            loading: true,\n            categories: []\n        };\n    }\n\n\n\n    async componentDidMount() {\n        const { data } = await axios('https://dog.ceo/api/breeds/list/all');\n\n        let dogs = [];\n\n        for (var type in data['message']) {\n            dogs.push(type);\n        }\n\n        let categories = dogs.map((dog) => <Category name={dog}/>);\n\n        this.setState({\n            loading: false,\n            categories: categories\n        });\n    }\n\n\n    render() {\n\n\n\n        const { error, loading, categories} = this.state;\n\n        if (error) {\n            return <div>Error: {error.message}</div>;\n        } else if (loading) {\n            return <div>Loading...</div>;\n        } else {\n            return(\n                <div className=\"container text-center\">\n                    <Header/>\n                    <h2>View all the types of cuteness!</h2>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div>\n                                {categories.filter((_, index) => index % 3 === 0)}\n                            </div>\n                        </div>\n\n                        <div className=\"col\">\n                            <div>\n                                {categories.filter((_, index) => index % 3 === 1)}\n                            </div>\n                        </div>\n\n                        <div className=\"col\">\n                            <div>\n                                {categories.filter((_, index) => index % 3 === 2)}\n                            </div>\n                        </div>\n                    </div>\n                    <Footer/>\n                </div>\n            );\n        }\n\n    }\n\n}\n\n\n\n\n","import React from 'react'\nimport Header from './Header.js'\nimport InfiniteScroll from 'react-infinite-scroller'\nimport Gallery from 'react-grid-gallery';\n\n\nexport default class Dog extends React.Component {\n\n    abortController = new AbortController();\n\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            imgs: [],\n            error: null\n        };\n    }\n\n    toTitleCase = (str) => {\n        return str\n            .toLowerCase()\n            .split(' ')\n            .map(word => word.charAt(0).toUpperCase() + word.slice(1))\n            .join(' ');\n    };\n\n\n    componentWillUnmount() {\n        this.abortController.abort();\n    }\n\n\n    load = () => {\n        fetch(`https://dog.ceo/api/breed/${this.props.match.params.breed}/images/random/10`, {signal: this.abortController.signal})\n            .then(res => res.json())\n            .then(\n                (data) => {\n\n                    var newImg = [];\n\n                    data['message'].forEach((url) => {\n                        newImg.push({\"src\": url, \"thumbnail\": url});\n                    });\n\n                    this.setState({\n                        imgs: this.state.imgs.concat(newImg)\n                    });\n\n                })\n            .catch((error) => {\n                    this.setState({\n                        error: error\n                    });\n                }\n            )\n    };\n\n\n\n\n    render() {\n\n\n        if(this.state.error) {\n            return(\n                <div className=\"container\">\n                    <h2>Rut roh! {this.state.error}</h2>\n                </div>\n            )\n        }\n        else {\n            return(\n                <div className=\"container text-center\">\n\n                <Header/>\n\n                <h1>{this.toTitleCase(this.props.match.params.breed)} dogs</h1>\n\n                <div className=\"container text-center\">\n                    <InfiniteScroll\n                        dataLength={this.state.imgs}\n                        pageStart={0}\n                        loadMore={this.load}\n                        hasMore={true}\n                        loader={<div><p>Loading cuteness...</p></div>}>\n                        {<Gallery images={this.state.imgs}/>}\n                    </InfiniteScroll>\n\n                </div>\n\n                </div>\n            )}\n        }\n}\n\n\n{/*<InfiniteScroll*/}\n    {/*dataLength={images}*/}\n    {/*next={() => fetchImages(5)}*/}\n    {/*hasMore={true}*/}\n    {/*loader={*/}\n        {/*<img*/}\n            {/*src=\"https://res.cloudinary.com/chuloo/image/upload/v1550093026/scotch-logo-gif_jq4tgr.gif\"*/}\n            {/*alt=\"loading\"*/}\n        {/*/>}*/}\n{/*>*/}\n    {/*<div className=\"image-grid\" style={{ marginTop: \"30px\" }}>*/}\n        {/*{loaded ?*/}\n            {/*images.map((image, index) => (*/}\n                {/*<UnsplashImage url={image.urls.regular} key={index} />*/}\n            {/*)): \"\"}*/}\n    {/*</div>*/}\n{/*</InfiniteScroll>*/}\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n//\n// ReactDOM.render(<App />, document.getElementById('root'));\n//\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n\n\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\n\n\nrender(\n<BrowserRouter>\n<App />\n</BrowserRouter>,\ndocument.querySelector('#root')\n)\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport Home from './Home'\nimport Dog from './Dog'\n\nexport default function App() {\n    return (\n        <Switch>\n        <Route exact path=\"/\" component={Home} />\n    <Route path=\"/:breed\" component={Dog} />\n    </Switch>\n)\n}\n\n\n\n\n","module.exports = __webpack_public_path__ + \"static/media/logo.6a8cec34.png\";"],"sourceRoot":""}